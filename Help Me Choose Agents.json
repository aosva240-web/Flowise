{
  "nodes": [
    {
      "id": "startAgentflow_0",
      "type": "agentFlow",
      "position": {
        "x": -247.2871951331413,
        "y": 102.97062218694956
      },
      "data": {
        "id": "startAgentflow_0",
        "label": "Start",
        "version": 1.1,
        "name": "startAgentflow",
        "type": "Start",
        "color": "#7EE787",
        "hideInput": true,
        "baseClasses": [
          "Start"
        ],
        "category": "Agent Flows",
        "description": "Starting point of the agentflow",
        "inputParams": [
          {
            "label": "Input Type",
            "name": "startInputType",
            "type": "options",
            "options": [
              {
                "label": "Chat Input",
                "name": "chatInput",
                "description": "Start the conversation with chat input"
              },
              {
                "label": "Form Input",
                "name": "formInput",
                "description": "Start the workflow with form inputs"
              }
            ],
            "default": "chatInput",
            "id": "startAgentflow_0-input-startInputType-options",
            "display": true
          },
          {
            "label": "Form Title",
            "name": "formTitle",
            "type": "string",
            "placeholder": "Please Fill Out The Form",
            "show": {
              "startInputType": "formInput"
            },
            "id": "startAgentflow_0-input-formTitle-string",
            "display": false
          },
          {
            "label": "Form Description",
            "name": "formDescription",
            "type": "string",
            "placeholder": "Complete all fields below to continue",
            "show": {
              "startInputType": "formInput"
            },
            "id": "startAgentflow_0-input-formDescription-string",
            "display": false
          },
          {
            "label": "Form Input Types",
            "name": "formInputTypes",
            "description": "Specify the type of form input",
            "type": "array",
            "show": {
              "startInputType": "formInput"
            },
            "array": [
              {
                "label": "Type",
                "name": "type",
                "type": "options",
                "options": [
                  {
                    "label": "String",
                    "name": "string"
                  },
                  {
                    "label": "Number",
                    "name": "number"
                  },
                  {
                    "label": "Boolean",
                    "name": "boolean"
                  },
                  {
                    "label": "Options",
                    "name": "options"
                  }
                ],
                "default": "string"
              },
              {
                "label": "Label",
                "name": "label",
                "type": "string",
                "placeholder": "Label for the input"
              },
              {
                "label": "Variable Name",
                "name": "name",
                "type": "string",
                "placeholder": "Variable name for the input (must be camel case)",
                "description": "Variable name must be camel case. For example: firstName, lastName, etc."
              },
              {
                "label": "Add Options",
                "name": "addOptions",
                "type": "array",
                "show": {
                  "formInputTypes[$index].type": "options"
                },
                "array": [
                  {
                    "label": "Option",
                    "name": "option",
                    "type": "string"
                  }
                ]
              }
            ],
            "id": "startAgentflow_0-input-formInputTypes-array",
            "display": false
          },
          {
            "label": "Ephemeral Memory",
            "name": "startEphemeralMemory",
            "type": "boolean",
            "description": "Start fresh for every execution without past chat history",
            "optional": true,
            "id": "startAgentflow_0-input-startEphemeralMemory-boolean",
            "display": true
          },
          {
            "label": "Flow State",
            "name": "startState",
            "description": "Runtime state during the execution of the workflow",
            "type": "array",
            "optional": true,
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "string",
                "placeholder": "Foo"
              },
              {
                "label": "Value",
                "name": "value",
                "type": "string",
                "placeholder": "Bar",
                "optional": true
              }
            ],
            "id": "startAgentflow_0-input-startState-array",
            "display": true
          },
          {
            "label": "Persist State",
            "name": "startPersistState",
            "type": "boolean",
            "description": "Persist the state in the same session",
            "optional": true,
            "id": "startAgentflow_0-input-startPersistState-boolean",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "startInputType": "chatInput",
          "formTitle": "",
          "formDescription": "",
          "formInputTypes": "",
          "startEphemeralMemory": "",
          "startState": [
            {
              "key": "",
              "value": ""
            }
          ],
          "startPersistState": ""
        },
        "outputAnchors": [
          {
            "id": "startAgentflow_0-output-startAgentflow",
            "label": "Start",
            "name": "startAgentflow"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 103,
      "height": 66,
      "positionAbsolute": {
        "x": -247.2871951331413,
        "y": 102.97062218694956
      },
      "selected": false,
      "dragging": false
    },
    {
      "id": "llmAgentflow_0",
      "position": {
        "x": 714.1421438963107,
        "y": 2.5259981613896514
      },
      "data": {
        "id": "llmAgentflow_0",
        "label": "Positive Reviews",
        "version": 1,
        "name": "llmAgentflow",
        "type": "LLM",
        "color": "#64B5F6",
        "baseClasses": [
          "LLM"
        ],
        "category": "Agent Flows",
        "description": "Large language models to analyze user-provided inputs and generate responses",
        "inputParams": [
          {
            "label": "Model",
            "name": "llmModel",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "loadConfig": true,
            "id": "llmAgentflow_0-input-llmModel-asyncOptions",
            "display": true
          },
          {
            "label": "Messages",
            "name": "llmMessages",
            "type": "array",
            "optional": true,
            "acceptVariable": true,
            "array": [
              {
                "label": "Role",
                "name": "role",
                "type": "options",
                "options": [
                  {
                    "label": "System",
                    "name": "system"
                  },
                  {
                    "label": "Assistant",
                    "name": "assistant"
                  },
                  {
                    "label": "Developer",
                    "name": "developer"
                  },
                  {
                    "label": "User",
                    "name": "user"
                  }
                ]
              },
              {
                "label": "Content",
                "name": "content",
                "type": "string",
                "acceptVariable": true,
                "generateInstruction": true,
                "rows": 4
              }
            ],
            "id": "llmAgentflow_0-input-llmMessages-array",
            "display": true
          },
          {
            "label": "Enable Memory",
            "name": "llmEnableMemory",
            "type": "boolean",
            "description": "Enable memory for the conversation thread",
            "default": true,
            "optional": true,
            "id": "llmAgentflow_0-input-llmEnableMemory-boolean",
            "display": true
          },
          {
            "label": "Memory Type",
            "name": "llmMemoryType",
            "type": "options",
            "options": [
              {
                "label": "All Messages",
                "name": "allMessages",
                "description": "Retrieve all messages from the conversation"
              },
              {
                "label": "Window Size",
                "name": "windowSize",
                "description": "Uses a fixed window size to surface the last N messages"
              },
              {
                "label": "Conversation Summary",
                "name": "conversationSummary",
                "description": "Summarizes the whole conversation"
              },
              {
                "label": "Conversation Summary Buffer",
                "name": "conversationSummaryBuffer",
                "description": "Summarize conversations once token limit is reached. Default to 2000"
              }
            ],
            "optional": true,
            "default": "allMessages",
            "show": {
              "llmEnableMemory": true
            },
            "id": "llmAgentflow_0-input-llmMemoryType-options",
            "display": true
          },
          {
            "label": "Window Size",
            "name": "llmMemoryWindowSize",
            "type": "number",
            "default": "20",
            "description": "Uses a fixed window size to surface the last N messages",
            "show": {
              "llmMemoryType": "windowSize"
            },
            "id": "llmAgentflow_0-input-llmMemoryWindowSize-number",
            "display": false
          },
          {
            "label": "Max Token Limit",
            "name": "llmMemoryMaxTokenLimit",
            "type": "number",
            "default": "2000",
            "description": "Summarize conversations once token limit is reached. Default to 2000",
            "show": {
              "llmMemoryType": "conversationSummaryBuffer"
            },
            "id": "llmAgentflow_0-input-llmMemoryMaxTokenLimit-number",
            "display": false
          },
          {
            "label": "Input Message",
            "name": "llmUserMessage",
            "type": "string",
            "description": "Add an input message as user message at the end of the conversation",
            "rows": 4,
            "optional": true,
            "acceptVariable": true,
            "show": {
              "llmEnableMemory": true
            },
            "id": "llmAgentflow_0-input-llmUserMessage-string",
            "display": true
          },
          {
            "label": "Return Response As",
            "name": "llmReturnResponseAs",
            "type": "options",
            "options": [
              {
                "label": "User Message",
                "name": "userMessage"
              },
              {
                "label": "Assistant Message",
                "name": "assistantMessage"
              }
            ],
            "default": "userMessage",
            "id": "llmAgentflow_0-input-llmReturnResponseAs-options",
            "display": true
          },
          {
            "label": "JSON Structured Output",
            "name": "llmStructuredOutput",
            "description": "Instruct the LLM to give output in a JSON structured schema",
            "type": "array",
            "optional": true,
            "acceptVariable": true,
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "string"
              },
              {
                "label": "Type",
                "name": "type",
                "type": "options",
                "options": [
                  {
                    "label": "String",
                    "name": "string"
                  },
                  {
                    "label": "String Array",
                    "name": "stringArray"
                  },
                  {
                    "label": "Number",
                    "name": "number"
                  },
                  {
                    "label": "Boolean",
                    "name": "boolean"
                  },
                  {
                    "label": "Enum",
                    "name": "enum"
                  },
                  {
                    "label": "JSON Array",
                    "name": "jsonArray"
                  }
                ]
              },
              {
                "label": "Enum Values",
                "name": "enumValues",
                "type": "string",
                "placeholder": "value1, value2, value3",
                "description": "Enum values. Separated by comma",
                "optional": true,
                "show": {
                  "llmStructuredOutput[$index].type": "enum"
                }
              },
              {
                "label": "JSON Schema",
                "name": "jsonSchema",
                "type": "code",
                "placeholder": "{\n    \"answer\": {\n        \"type\": \"string\",\n        \"description\": \"Value of the answer\"\n    },\n    \"reason\": {\n        \"type\": \"string\",\n        \"description\": \"Reason for the answer\"\n    },\n    \"optional\": {\n        \"type\": \"boolean\"\n    },\n    \"count\": {\n        \"type\": \"number\"\n    },\n    \"children\": {\n        \"type\": \"array\",\n        \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"value\": {\n                    \"type\": \"string\",\n                    \"description\": \"Value of the children's answer\"\n                }\n            }\n        }\n    }\n}",
                "description": "JSON schema for the structured output",
                "optional": true,
                "hideCodeExecute": true,
                "show": {
                  "llmStructuredOutput[$index].type": "jsonArray"
                }
              },
              {
                "label": "Description",
                "name": "description",
                "type": "string",
                "placeholder": "Description of the key"
              }
            ],
            "id": "llmAgentflow_0-input-llmStructuredOutput-array",
            "display": true
          },
          {
            "label": "Update Flow State",
            "name": "llmUpdateState",
            "description": "Update runtime state during the execution of the workflow",
            "type": "array",
            "optional": true,
            "acceptVariable": true,
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "asyncOptions",
                "loadMethod": "listRuntimeStateKeys",
                "freeSolo": true
              },
              {
                "label": "Value",
                "name": "value",
                "type": "string",
                "acceptVariable": true,
                "acceptNodeOutputAsVariable": true
              }
            ],
            "id": "llmAgentflow_0-input-llmUpdateState-array",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "llmModel": "chatOpenRouter",
          "llmMessages": "",
          "llmEnableMemory": true,
          "llmMemoryType": "allMessages",
          "llmUserMessage": "<p>You are a shopping assistant AI. Read product reviews and tell me:</p><p>Pros and Cons. <span class=\"variable\" data-type=\"mention\" data-id=\"httpAgentflow_3\" data-label=\"httpAgentflow_3\">{{ httpAgentflow_3 }}</span> </p>",
          "llmReturnResponseAs": "userMessage",
          "llmStructuredOutput": [
            {
              "key": "Pros",
              "type": "stringArray",
              "enumValues": "",
              "jsonSchema": "",
              "description": "[\"List of main positive aspects mentioned in reviews\"]"
            }
          ],
          "llmUpdateState": "",
          "undefined": "",
          "llmModelConfig": {
            "credential": "",
            "modelName": "openai/gpt-oss-20b:free",
            "temperature": 0.9,
            "streaming": true,
            "maxTokens": "",
            "topP": "",
            "frequencyPenalty": "",
            "presencePenalty": "",
            "timeout": "",
            "basepath": "https://openrouter.ai/api/v1",
            "baseOptions": "",
            "llmModel": "chatOpenRouter"
          }
        },
        "outputAnchors": [
          {
            "id": "llmAgentflow_0-output-llmAgentflow",
            "label": "LLM",
            "name": "llmAgentflow"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "type": "agentFlow",
      "width": 243,
      "height": 72,
      "selected": false,
      "positionAbsolute": {
        "x": 714.1421438963107,
        "y": 2.5259981613896514
      },
      "dragging": false
    },
    {
      "id": "llmAgentflow_1",
      "position": {
        "x": 713.4314254727244,
        "y": 211.18155299906147
      },
      "data": {
        "id": "llmAgentflow_1",
        "label": "Negative Reviews",
        "version": 1,
        "name": "llmAgentflow",
        "type": "LLM",
        "color": "#64B5F6",
        "baseClasses": [
          "LLM"
        ],
        "category": "Agent Flows",
        "description": "Large language models to analyze user-provided inputs and generate responses",
        "inputParams": [
          {
            "label": "Model",
            "name": "llmModel",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "loadConfig": true,
            "id": "llmAgentflow_1-input-llmModel-asyncOptions",
            "display": true
          },
          {
            "label": "Messages",
            "name": "llmMessages",
            "type": "array",
            "optional": true,
            "acceptVariable": true,
            "array": [
              {
                "label": "Role",
                "name": "role",
                "type": "options",
                "options": [
                  {
                    "label": "System",
                    "name": "system"
                  },
                  {
                    "label": "Assistant",
                    "name": "assistant"
                  },
                  {
                    "label": "Developer",
                    "name": "developer"
                  },
                  {
                    "label": "User",
                    "name": "user"
                  }
                ]
              },
              {
                "label": "Content",
                "name": "content",
                "type": "string",
                "acceptVariable": true,
                "generateInstruction": true,
                "rows": 4
              }
            ],
            "id": "llmAgentflow_1-input-llmMessages-array",
            "display": true
          },
          {
            "label": "Enable Memory",
            "name": "llmEnableMemory",
            "type": "boolean",
            "description": "Enable memory for the conversation thread",
            "default": true,
            "optional": true,
            "id": "llmAgentflow_1-input-llmEnableMemory-boolean",
            "display": true
          },
          {
            "label": "Memory Type",
            "name": "llmMemoryType",
            "type": "options",
            "options": [
              {
                "label": "All Messages",
                "name": "allMessages",
                "description": "Retrieve all messages from the conversation"
              },
              {
                "label": "Window Size",
                "name": "windowSize",
                "description": "Uses a fixed window size to surface the last N messages"
              },
              {
                "label": "Conversation Summary",
                "name": "conversationSummary",
                "description": "Summarizes the whole conversation"
              },
              {
                "label": "Conversation Summary Buffer",
                "name": "conversationSummaryBuffer",
                "description": "Summarize conversations once token limit is reached. Default to 2000"
              }
            ],
            "optional": true,
            "default": "allMessages",
            "show": {
              "llmEnableMemory": true
            },
            "id": "llmAgentflow_1-input-llmMemoryType-options",
            "display": true
          },
          {
            "label": "Window Size",
            "name": "llmMemoryWindowSize",
            "type": "number",
            "default": "20",
            "description": "Uses a fixed window size to surface the last N messages",
            "show": {
              "llmMemoryType": "windowSize"
            },
            "id": "llmAgentflow_1-input-llmMemoryWindowSize-number",
            "display": false
          },
          {
            "label": "Max Token Limit",
            "name": "llmMemoryMaxTokenLimit",
            "type": "number",
            "default": "2000",
            "description": "Summarize conversations once token limit is reached. Default to 2000",
            "show": {
              "llmMemoryType": "conversationSummaryBuffer"
            },
            "id": "llmAgentflow_1-input-llmMemoryMaxTokenLimit-number",
            "display": false
          },
          {
            "label": "Input Message",
            "name": "llmUserMessage",
            "type": "string",
            "description": "Add an input message as user message at the end of the conversation",
            "rows": 4,
            "optional": true,
            "acceptVariable": true,
            "show": {
              "llmEnableMemory": true
            },
            "id": "llmAgentflow_1-input-llmUserMessage-string",
            "display": true
          },
          {
            "label": "Return Response As",
            "name": "llmReturnResponseAs",
            "type": "options",
            "options": [
              {
                "label": "User Message",
                "name": "userMessage"
              },
              {
                "label": "Assistant Message",
                "name": "assistantMessage"
              }
            ],
            "default": "userMessage",
            "id": "llmAgentflow_1-input-llmReturnResponseAs-options",
            "display": true
          },
          {
            "label": "JSON Structured Output",
            "name": "llmStructuredOutput",
            "description": "Instruct the LLM to give output in a JSON structured schema",
            "type": "array",
            "optional": true,
            "acceptVariable": true,
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "string"
              },
              {
                "label": "Type",
                "name": "type",
                "type": "options",
                "options": [
                  {
                    "label": "String",
                    "name": "string"
                  },
                  {
                    "label": "String Array",
                    "name": "stringArray"
                  },
                  {
                    "label": "Number",
                    "name": "number"
                  },
                  {
                    "label": "Boolean",
                    "name": "boolean"
                  },
                  {
                    "label": "Enum",
                    "name": "enum"
                  },
                  {
                    "label": "JSON Array",
                    "name": "jsonArray"
                  }
                ]
              },
              {
                "label": "Enum Values",
                "name": "enumValues",
                "type": "string",
                "placeholder": "value1, value2, value3",
                "description": "Enum values. Separated by comma",
                "optional": true,
                "show": {
                  "llmStructuredOutput[$index].type": "enum"
                }
              },
              {
                "label": "JSON Schema",
                "name": "jsonSchema",
                "type": "code",
                "placeholder": "{\n    \"answer\": {\n        \"type\": \"string\",\n        \"description\": \"Value of the answer\"\n    },\n    \"reason\": {\n        \"type\": \"string\",\n        \"description\": \"Reason for the answer\"\n    },\n    \"optional\": {\n        \"type\": \"boolean\"\n    },\n    \"count\": {\n        \"type\": \"number\"\n    },\n    \"children\": {\n        \"type\": \"array\",\n        \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"value\": {\n                    \"type\": \"string\",\n                    \"description\": \"Value of the children's answer\"\n                }\n            }\n        }\n    }\n}",
                "description": "JSON schema for the structured output",
                "optional": true,
                "hideCodeExecute": true,
                "show": {
                  "llmStructuredOutput[$index].type": "jsonArray"
                }
              },
              {
                "label": "Description",
                "name": "description",
                "type": "string",
                "placeholder": "Description of the key"
              }
            ],
            "id": "llmAgentflow_1-input-llmStructuredOutput-array",
            "display": true
          },
          {
            "label": "Update Flow State",
            "name": "llmUpdateState",
            "description": "Update runtime state during the execution of the workflow",
            "type": "array",
            "optional": true,
            "acceptVariable": true,
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "asyncOptions",
                "loadMethod": "listRuntimeStateKeys",
                "freeSolo": true
              },
              {
                "label": "Value",
                "name": "value",
                "type": "string",
                "acceptVariable": true,
                "acceptNodeOutputAsVariable": true
              }
            ],
            "id": "llmAgentflow_1-input-llmUpdateState-array",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "llmModel": "chatOpenRouter",
          "llmMessages": "",
          "llmEnableMemory": true,
          "llmMemoryType": "allMessages",
          "llmUserMessage": "<p>You are a shopping assistant AI. Read product reviews and tell me:</p><p>Pros and Cons. <span class=\"variable\" data-type=\"mention\" data-id=\"httpAgentflow_4\" data-label=\"httpAgentflow_4\">{{ httpAgentflow_4 }}</span> </p>",
          "llmReturnResponseAs": "userMessage",
          "llmStructuredOutput": [
            {
              "key": "Cons",
              "type": "stringArray",
              "enumValues": "",
              "jsonSchema": "",
              "description": "[\"List of main negative aspects mentioned in reviews\"]"
            }
          ],
          "llmUpdateState": "",
          "llmModelConfig": {
            "credential": "",
            "modelName": "openai/gpt-oss-20b:free",
            "temperature": 0.9,
            "streaming": true,
            "maxTokens": "",
            "topP": "",
            "frequencyPenalty": "",
            "presencePenalty": "",
            "timeout": "",
            "basepath": "https://openrouter.ai/api/v1",
            "baseOptions": "",
            "llmModel": "chatOpenRouter"
          },
          "undefined": ""
        },
        "outputAnchors": [
          {
            "id": "llmAgentflow_1-output-llmAgentflow",
            "label": "LLM",
            "name": "llmAgentflow"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "type": "agentFlow",
      "width": 243,
      "height": 72,
      "selected": false,
      "positionAbsolute": {
        "x": 713.4314254727244,
        "y": 211.18155299906147
      },
      "dragging": false
    },
    {
      "id": "httpAgentflow_3",
      "position": {
        "x": 518.783847230632,
        "y": 5.8476206132545485
      },
      "data": {
        "id": "httpAgentflow_3",
        "label": "Amazon",
        "version": 1.1,
        "name": "httpAgentflow",
        "type": "HTTP",
        "color": "#FF7F7F",
        "baseClasses": [
          "HTTP"
        ],
        "category": "Agent Flows",
        "description": "Send a HTTP request",
        "inputParams": [
          {
            "label": "HTTP Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "httpBasicAuth",
              "httpBearerToken",
              "httpApiKey"
            ],
            "optional": true,
            "id": "httpAgentflow_3-input-credential-credential",
            "display": true
          },
          {
            "label": "Method",
            "name": "method",
            "type": "options",
            "options": [
              {
                "label": "GET",
                "name": "GET"
              },
              {
                "label": "POST",
                "name": "POST"
              },
              {
                "label": "PUT",
                "name": "PUT"
              },
              {
                "label": "DELETE",
                "name": "DELETE"
              },
              {
                "label": "PATCH",
                "name": "PATCH"
              }
            ],
            "default": "GET",
            "id": "httpAgentflow_3-input-method-options",
            "display": true
          },
          {
            "label": "URL",
            "name": "url",
            "type": "string",
            "id": "httpAgentflow_3-input-url-string",
            "display": true
          },
          {
            "label": "Headers",
            "name": "headers",
            "type": "array",
            "acceptVariable": true,
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "string",
                "default": ""
              },
              {
                "label": "Value",
                "name": "value",
                "type": "string",
                "default": "",
                "acceptVariable": true
              }
            ],
            "optional": true,
            "id": "httpAgentflow_3-input-headers-array",
            "display": true
          },
          {
            "label": "Query Params",
            "name": "queryParams",
            "type": "array",
            "acceptVariable": true,
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "string",
                "default": ""
              },
              {
                "label": "Value",
                "name": "value",
                "type": "string",
                "default": "",
                "acceptVariable": true
              }
            ],
            "optional": true,
            "id": "httpAgentflow_3-input-queryParams-array",
            "display": true
          },
          {
            "label": "Body Type",
            "name": "bodyType",
            "type": "options",
            "options": [
              {
                "label": "JSON",
                "name": "json"
              },
              {
                "label": "Raw",
                "name": "raw"
              },
              {
                "label": "Form Data",
                "name": "formData"
              },
              {
                "label": "x-www-form-urlencoded",
                "name": "xWwwFormUrlencoded"
              }
            ],
            "optional": true,
            "id": "httpAgentflow_3-input-bodyType-options",
            "display": true
          },
          {
            "label": "Body",
            "name": "body",
            "type": "string",
            "acceptVariable": true,
            "rows": 4,
            "show": {
              "bodyType": [
                "raw",
                "json"
              ]
            },
            "optional": true,
            "id": "httpAgentflow_3-input-body-string",
            "display": false
          },
          {
            "label": "Body",
            "name": "body",
            "type": "array",
            "acceptVariable": true,
            "show": {
              "bodyType": [
                "xWwwFormUrlencoded",
                "formData"
              ]
            },
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "string",
                "default": ""
              },
              {
                "label": "Value",
                "name": "value",
                "type": "string",
                "default": "",
                "acceptVariable": true
              }
            ],
            "optional": true,
            "id": "httpAgentflow_3-input-body-array",
            "display": false
          },
          {
            "label": "Response Type",
            "name": "responseType",
            "type": "options",
            "options": [
              {
                "label": "JSON",
                "name": "json"
              },
              {
                "label": "Text",
                "name": "text"
              },
              {
                "label": "Array Buffer",
                "name": "arraybuffer"
              },
              {
                "label": "Raw (Base64)",
                "name": "base64"
              }
            ],
            "optional": true,
            "id": "httpAgentflow_3-input-responseType-options",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "method": "GET",
          "url": "https://www.amazon.ca/",
          "headers": "",
          "queryParams": "",
          "bodyType": "",
          "body": "",
          "responseType": "",
          "undefined": ""
        },
        "outputAnchors": [
          {
            "id": "httpAgentflow_3-output-httpAgentflow",
            "label": "HTTP",
            "name": "httpAgentflow"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "type": "agentFlow",
      "width": 125,
      "height": 66,
      "selected": false,
      "positionAbsolute": {
        "x": 518.783847230632,
        "y": 5.8476206132545485
      },
      "dragging": false
    },
    {
      "id": "httpAgentflow_4",
      "position": {
        "x": 521.0149502081406,
        "y": 215.3033067897673
      },
      "data": {
        "id": "httpAgentflow_4",
        "label": "Amazon",
        "version": 1.1,
        "name": "httpAgentflow",
        "type": "HTTP",
        "color": "#FF7F7F",
        "baseClasses": [
          "HTTP"
        ],
        "category": "Agent Flows",
        "description": "Send a HTTP request",
        "inputParams": [
          {
            "label": "HTTP Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "httpBasicAuth",
              "httpBearerToken",
              "httpApiKey"
            ],
            "optional": true,
            "id": "httpAgentflow_4-input-credential-credential",
            "display": true
          },
          {
            "label": "Method",
            "name": "method",
            "type": "options",
            "options": [
              {
                "label": "GET",
                "name": "GET"
              },
              {
                "label": "POST",
                "name": "POST"
              },
              {
                "label": "PUT",
                "name": "PUT"
              },
              {
                "label": "DELETE",
                "name": "DELETE"
              },
              {
                "label": "PATCH",
                "name": "PATCH"
              }
            ],
            "default": "GET",
            "id": "httpAgentflow_4-input-method-options",
            "display": true
          },
          {
            "label": "URL",
            "name": "url",
            "type": "string",
            "id": "httpAgentflow_4-input-url-string",
            "display": true
          },
          {
            "label": "Headers",
            "name": "headers",
            "type": "array",
            "acceptVariable": true,
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "string",
                "default": ""
              },
              {
                "label": "Value",
                "name": "value",
                "type": "string",
                "default": "",
                "acceptVariable": true
              }
            ],
            "optional": true,
            "id": "httpAgentflow_4-input-headers-array",
            "display": true
          },
          {
            "label": "Query Params",
            "name": "queryParams",
            "type": "array",
            "acceptVariable": true,
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "string",
                "default": ""
              },
              {
                "label": "Value",
                "name": "value",
                "type": "string",
                "default": "",
                "acceptVariable": true
              }
            ],
            "optional": true,
            "id": "httpAgentflow_4-input-queryParams-array",
            "display": true
          },
          {
            "label": "Body Type",
            "name": "bodyType",
            "type": "options",
            "options": [
              {
                "label": "JSON",
                "name": "json"
              },
              {
                "label": "Raw",
                "name": "raw"
              },
              {
                "label": "Form Data",
                "name": "formData"
              },
              {
                "label": "x-www-form-urlencoded",
                "name": "xWwwFormUrlencoded"
              }
            ],
            "optional": true,
            "id": "httpAgentflow_4-input-bodyType-options",
            "display": true
          },
          {
            "label": "Body",
            "name": "body",
            "type": "string",
            "acceptVariable": true,
            "rows": 4,
            "show": {
              "bodyType": [
                "raw",
                "json"
              ]
            },
            "optional": true,
            "id": "httpAgentflow_4-input-body-string",
            "display": false
          },
          {
            "label": "Body",
            "name": "body",
            "type": "array",
            "acceptVariable": true,
            "show": {
              "bodyType": [
                "xWwwFormUrlencoded",
                "formData"
              ]
            },
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "string",
                "default": ""
              },
              {
                "label": "Value",
                "name": "value",
                "type": "string",
                "default": "",
                "acceptVariable": true
              }
            ],
            "optional": true,
            "id": "httpAgentflow_4-input-body-array",
            "display": false
          },
          {
            "label": "Response Type",
            "name": "responseType",
            "type": "options",
            "options": [
              {
                "label": "JSON",
                "name": "json"
              },
              {
                "label": "Text",
                "name": "text"
              },
              {
                "label": "Array Buffer",
                "name": "arraybuffer"
              },
              {
                "label": "Raw (Base64)",
                "name": "base64"
              }
            ],
            "optional": true,
            "id": "httpAgentflow_4-input-responseType-options",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "method": "GET",
          "url": "https://www.amazon.ca/",
          "headers": "",
          "queryParams": "",
          "bodyType": "",
          "body": "",
          "responseType": "",
          "undefined": ""
        },
        "outputAnchors": [
          {
            "id": "httpAgentflow_4-output-httpAgentflow",
            "label": "HTTP",
            "name": "httpAgentflow"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "type": "agentFlow",
      "width": 125,
      "height": 66,
      "selected": false,
      "positionAbsolute": {
        "x": 521.0149502081406,
        "y": 215.3033067897673
      },
      "dragging": false
    },
    {
      "id": "iterationAgentflow_0",
      "position": {
        "x": 1253.2133037196747,
        "y": 16.344203131893437
      },
      "data": {
        "id": "iterationAgentflow_0",
        "label": "Review Scraper",
        "version": 1,
        "name": "iterationAgentflow",
        "type": "Iteration",
        "color": "#9C89B8",
        "baseClasses": [
          "Iteration"
        ],
        "category": "Agent Flows",
        "description": "Execute the nodes within the iteration block through N iterations",
        "inputParams": [
          {
            "label": "Array Input",
            "name": "iterationInput",
            "type": "string",
            "description": "The input array to iterate over",
            "acceptVariable": true,
            "rows": 4,
            "id": "iterationAgentflow_0-input-iterationInput-string",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "iterationInput": "<p>[\"https://www.amazon.ca/\"]</p>",
          "undefined": ""
        },
        "outputAnchors": [
          {
            "id": "iterationAgentflow_0-output-iterationAgentflow",
            "label": "Iteration",
            "name": "iterationAgentflow"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "type": "iteration",
      "width": 300,
      "height": 251,
      "selected": false,
      "positionAbsolute": {
        "x": 1253.2133037196747,
        "y": 16.344203131893437
      },
      "dragging": false,
      "resizing": false,
      "style": {
        "width": 300,
        "height": 251
      }
    },
    {
      "id": "httpAgentflow_6",
      "position": {
        "x": 1612.3433290979763,
        "y": 108.80799084737168
      },
      "data": {
        "id": "httpAgentflow_6",
        "label": "Amazon Review Page",
        "version": 1.1,
        "name": "httpAgentflow",
        "type": "HTTP",
        "color": "#FF7F7F",
        "baseClasses": [
          "HTTP"
        ],
        "category": "Agent Flows",
        "description": "Send a HTTP request",
        "inputParams": [
          {
            "label": "HTTP Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "httpBasicAuth",
              "httpBearerToken",
              "httpApiKey"
            ],
            "optional": true,
            "id": "httpAgentflow_6-input-credential-credential",
            "display": true
          },
          {
            "label": "Method",
            "name": "method",
            "type": "options",
            "options": [
              {
                "label": "GET",
                "name": "GET"
              },
              {
                "label": "POST",
                "name": "POST"
              },
              {
                "label": "PUT",
                "name": "PUT"
              },
              {
                "label": "DELETE",
                "name": "DELETE"
              },
              {
                "label": "PATCH",
                "name": "PATCH"
              }
            ],
            "default": "GET",
            "id": "httpAgentflow_6-input-method-options",
            "display": true
          },
          {
            "label": "URL",
            "name": "url",
            "type": "string",
            "id": "httpAgentflow_6-input-url-string",
            "display": true
          },
          {
            "label": "Headers",
            "name": "headers",
            "type": "array",
            "acceptVariable": true,
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "string",
                "default": ""
              },
              {
                "label": "Value",
                "name": "value",
                "type": "string",
                "default": "",
                "acceptVariable": true
              }
            ],
            "optional": true,
            "id": "httpAgentflow_6-input-headers-array",
            "display": true
          },
          {
            "label": "Query Params",
            "name": "queryParams",
            "type": "array",
            "acceptVariable": true,
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "string",
                "default": ""
              },
              {
                "label": "Value",
                "name": "value",
                "type": "string",
                "default": "",
                "acceptVariable": true
              }
            ],
            "optional": true,
            "id": "httpAgentflow_6-input-queryParams-array",
            "display": true
          },
          {
            "label": "Body Type",
            "name": "bodyType",
            "type": "options",
            "options": [
              {
                "label": "JSON",
                "name": "json"
              },
              {
                "label": "Raw",
                "name": "raw"
              },
              {
                "label": "Form Data",
                "name": "formData"
              },
              {
                "label": "x-www-form-urlencoded",
                "name": "xWwwFormUrlencoded"
              }
            ],
            "optional": true,
            "id": "httpAgentflow_6-input-bodyType-options",
            "display": true
          },
          {
            "label": "Body",
            "name": "body",
            "type": "string",
            "acceptVariable": true,
            "rows": 4,
            "show": {
              "bodyType": [
                "raw",
                "json"
              ]
            },
            "optional": true,
            "id": "httpAgentflow_6-input-body-string",
            "display": false
          },
          {
            "label": "Body",
            "name": "body",
            "type": "array",
            "acceptVariable": true,
            "show": {
              "bodyType": [
                "xWwwFormUrlencoded",
                "formData"
              ]
            },
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "string",
                "default": ""
              },
              {
                "label": "Value",
                "name": "value",
                "type": "string",
                "default": "",
                "acceptVariable": true
              }
            ],
            "optional": true,
            "id": "httpAgentflow_6-input-body-array",
            "display": false
          },
          {
            "label": "Response Type",
            "name": "responseType",
            "type": "options",
            "options": [
              {
                "label": "JSON",
                "name": "json"
              },
              {
                "label": "Text",
                "name": "text"
              },
              {
                "label": "Array Buffer",
                "name": "arraybuffer"
              },
              {
                "label": "Raw (Base64)",
                "name": "base64"
              }
            ],
            "optional": true,
            "id": "httpAgentflow_6-input-responseType-options",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "method": "GET",
          "url": "https://www.amazon.ca/",
          "headers": "",
          "queryParams": "",
          "bodyType": "",
          "body": "",
          "responseType": ""
        },
        "outputAnchors": [
          {
            "id": "httpAgentflow_6-output-httpAgentflow",
            "label": "HTTP",
            "name": "httpAgentflow"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "type": "agentFlow",
      "width": 212,
      "height": 66,
      "selected": false,
      "positionAbsolute": {
        "x": 1612.3433290979763,
        "y": 108.80799084737168
      },
      "dragging": false
    },
    {
      "id": "llmAgentflow_2",
      "position": {
        "x": 1886.9525000967799,
        "y": 105.46706894507415
      },
      "data": {
        "id": "llmAgentflow_2",
        "label": "Final Verdict",
        "version": 1,
        "name": "llmAgentflow",
        "type": "LLM",
        "color": "#64B5F6",
        "baseClasses": [
          "LLM"
        ],
        "category": "Agent Flows",
        "description": "Large language models to analyze user-provided inputs and generate responses",
        "inputParams": [
          {
            "label": "Model",
            "name": "llmModel",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "loadConfig": true,
            "id": "llmAgentflow_2-input-llmModel-asyncOptions",
            "display": true
          },
          {
            "label": "Messages",
            "name": "llmMessages",
            "type": "array",
            "optional": true,
            "acceptVariable": true,
            "array": [
              {
                "label": "Role",
                "name": "role",
                "type": "options",
                "options": [
                  {
                    "label": "System",
                    "name": "system"
                  },
                  {
                    "label": "Assistant",
                    "name": "assistant"
                  },
                  {
                    "label": "Developer",
                    "name": "developer"
                  },
                  {
                    "label": "User",
                    "name": "user"
                  }
                ]
              },
              {
                "label": "Content",
                "name": "content",
                "type": "string",
                "acceptVariable": true,
                "generateInstruction": true,
                "rows": 4
              }
            ],
            "id": "llmAgentflow_2-input-llmMessages-array",
            "display": true
          },
          {
            "label": "Enable Memory",
            "name": "llmEnableMemory",
            "type": "boolean",
            "description": "Enable memory for the conversation thread",
            "default": true,
            "optional": true,
            "id": "llmAgentflow_2-input-llmEnableMemory-boolean",
            "display": true
          },
          {
            "label": "Memory Type",
            "name": "llmMemoryType",
            "type": "options",
            "options": [
              {
                "label": "All Messages",
                "name": "allMessages",
                "description": "Retrieve all messages from the conversation"
              },
              {
                "label": "Window Size",
                "name": "windowSize",
                "description": "Uses a fixed window size to surface the last N messages"
              },
              {
                "label": "Conversation Summary",
                "name": "conversationSummary",
                "description": "Summarizes the whole conversation"
              },
              {
                "label": "Conversation Summary Buffer",
                "name": "conversationSummaryBuffer",
                "description": "Summarize conversations once token limit is reached. Default to 2000"
              }
            ],
            "optional": true,
            "default": "allMessages",
            "show": {
              "llmEnableMemory": true
            },
            "id": "llmAgentflow_2-input-llmMemoryType-options",
            "display": true
          },
          {
            "label": "Window Size",
            "name": "llmMemoryWindowSize",
            "type": "number",
            "default": "20",
            "description": "Uses a fixed window size to surface the last N messages",
            "show": {
              "llmMemoryType": "windowSize"
            },
            "id": "llmAgentflow_2-input-llmMemoryWindowSize-number",
            "display": false
          },
          {
            "label": "Max Token Limit",
            "name": "llmMemoryMaxTokenLimit",
            "type": "number",
            "default": "2000",
            "description": "Summarize conversations once token limit is reached. Default to 2000",
            "show": {
              "llmMemoryType": "conversationSummaryBuffer"
            },
            "id": "llmAgentflow_2-input-llmMemoryMaxTokenLimit-number",
            "display": false
          },
          {
            "label": "Input Message",
            "name": "llmUserMessage",
            "type": "string",
            "description": "Add an input message as user message at the end of the conversation",
            "rows": 4,
            "optional": true,
            "acceptVariable": true,
            "show": {
              "llmEnableMemory": true
            },
            "id": "llmAgentflow_2-input-llmUserMessage-string",
            "display": true
          },
          {
            "label": "Return Response As",
            "name": "llmReturnResponseAs",
            "type": "options",
            "options": [
              {
                "label": "User Message",
                "name": "userMessage"
              },
              {
                "label": "Assistant Message",
                "name": "assistantMessage"
              }
            ],
            "default": "userMessage",
            "id": "llmAgentflow_2-input-llmReturnResponseAs-options",
            "display": true
          },
          {
            "label": "JSON Structured Output",
            "name": "llmStructuredOutput",
            "description": "Instruct the LLM to give output in a JSON structured schema",
            "type": "array",
            "optional": true,
            "acceptVariable": true,
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "string"
              },
              {
                "label": "Type",
                "name": "type",
                "type": "options",
                "options": [
                  {
                    "label": "String",
                    "name": "string"
                  },
                  {
                    "label": "String Array",
                    "name": "stringArray"
                  },
                  {
                    "label": "Number",
                    "name": "number"
                  },
                  {
                    "label": "Boolean",
                    "name": "boolean"
                  },
                  {
                    "label": "Enum",
                    "name": "enum"
                  },
                  {
                    "label": "JSON Array",
                    "name": "jsonArray"
                  }
                ]
              },
              {
                "label": "Enum Values",
                "name": "enumValues",
                "type": "string",
                "placeholder": "value1, value2, value3",
                "description": "Enum values. Separated by comma",
                "optional": true,
                "show": {
                  "llmStructuredOutput[$index].type": "enum"
                }
              },
              {
                "label": "JSON Schema",
                "name": "jsonSchema",
                "type": "code",
                "placeholder": "{\n    \"answer\": {\n        \"type\": \"string\",\n        \"description\": \"Value of the answer\"\n    },\n    \"reason\": {\n        \"type\": \"string\",\n        \"description\": \"Reason for the answer\"\n    },\n    \"optional\": {\n        \"type\": \"boolean\"\n    },\n    \"count\": {\n        \"type\": \"number\"\n    },\n    \"children\": {\n        \"type\": \"array\",\n        \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"value\": {\n                    \"type\": \"string\",\n                    \"description\": \"Value of the children's answer\"\n                }\n            }\n        }\n    }\n}",
                "description": "JSON schema for the structured output",
                "optional": true,
                "hideCodeExecute": true,
                "show": {
                  "llmStructuredOutput[$index].type": "jsonArray"
                }
              },
              {
                "label": "Description",
                "name": "description",
                "type": "string",
                "placeholder": "Description of the key"
              }
            ],
            "id": "llmAgentflow_2-input-llmStructuredOutput-array",
            "display": true
          },
          {
            "label": "Update Flow State",
            "name": "llmUpdateState",
            "description": "Update runtime state during the execution of the workflow",
            "type": "array",
            "optional": true,
            "acceptVariable": true,
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "asyncOptions",
                "loadMethod": "listRuntimeStateKeys",
                "freeSolo": true
              },
              {
                "label": "Value",
                "name": "value",
                "type": "string",
                "acceptVariable": true,
                "acceptNodeOutputAsVariable": true
              }
            ],
            "id": "llmAgentflow_2-input-llmUpdateState-array",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "llmModel": "chatOpenRouter",
          "llmMessages": "",
          "llmEnableMemory": true,
          "llmMemoryType": "allMessages",
          "llmUserMessage": "<p>Analyze the following product reviews and provide your verdict: <span class=\"variable\" data-type=\"mention\" data-id=\"httpAgentflow_6\" data-label=\"httpAgentflow_6\">{{ httpAgentflow_6 }}</span></p>",
          "llmReturnResponseAs": "userMessage",
          "llmStructuredOutput": [
            {
              "key": "Verdict",
              "type": "string",
              "enumValues": "",
              "jsonSchema": "",
              "description": "[\"Overall decision: Yes, No, or Uncertain\"]"
            }
          ],
          "llmUpdateState": "",
          "llmModelConfig": {
            "credential": "",
            "modelName": "openai/gpt-oss-20b:free",
            "temperature": 0.9,
            "streaming": true,
            "maxTokens": "",
            "topP": "",
            "frequencyPenalty": "",
            "presencePenalty": "",
            "timeout": "",
            "basepath": "https://openrouter.ai/api/v1",
            "baseOptions": "",
            "llmModel": "chatOpenRouter"
          },
          "undefined": ""
        },
        "outputAnchors": [
          {
            "id": "llmAgentflow_2-output-llmAgentflow",
            "label": "LLM",
            "name": "llmAgentflow"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "type": "agentFlow",
      "width": 243,
      "height": 72,
      "selected": false,
      "positionAbsolute": {
        "x": 1886.9525000967799,
        "y": 105.46706894507415
      },
      "dragging": false
    },
    {
      "id": "retrieverAgentflow_0",
      "position": {
        "x": 1016.8712015965233,
        "y": 109.6811171767973
      },
      "data": {
        "id": "retrieverAgentflow_0",
        "label": "Review Retriever",
        "version": 1,
        "name": "retrieverAgentflow",
        "type": "Retriever",
        "color": "#b8bedd",
        "baseClasses": [
          "Retriever"
        ],
        "category": "Agent Flows",
        "description": "Retrieve information from vector database",
        "inputParams": [
          {
            "label": "Knowledge (Document Stores)",
            "name": "retrieverKnowledgeDocumentStores",
            "type": "array",
            "description": "Document stores to retrieve information from. Document stores must be upserted in advance.",
            "array": [
              {
                "label": "Document Store",
                "name": "documentStore",
                "type": "asyncOptions",
                "loadMethod": "listStores"
              }
            ],
            "id": "retrieverAgentflow_0-input-retrieverKnowledgeDocumentStores-array",
            "display": true
          },
          {
            "label": "Retriever Query",
            "name": "retrieverQuery",
            "type": "string",
            "placeholder": "Enter your query here",
            "rows": 4,
            "acceptVariable": true,
            "id": "retrieverAgentflow_0-input-retrieverQuery-string",
            "display": true
          },
          {
            "label": "Output Format",
            "name": "outputFormat",
            "type": "options",
            "options": [
              {
                "label": "Text",
                "name": "text"
              },
              {
                "label": "Text with Metadata",
                "name": "textWithMetadata"
              }
            ],
            "default": "text",
            "id": "retrieverAgentflow_0-input-outputFormat-options",
            "display": true
          },
          {
            "label": "Update Flow State",
            "name": "retrieverUpdateState",
            "description": "Update runtime state during the execution of the workflow",
            "type": "array",
            "optional": true,
            "acceptVariable": true,
            "array": [
              {
                "label": "Key",
                "name": "key",
                "type": "asyncOptions",
                "loadMethod": "listRuntimeStateKeys",
                "freeSolo": true
              },
              {
                "label": "Value",
                "name": "value",
                "type": "string",
                "acceptVariable": true,
                "acceptNodeOutputAsVariable": true
              }
            ],
            "id": "retrieverAgentflow_0-input-retrieverUpdateState-array",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "retrieverKnowledgeDocumentStores": [],
          "retrieverQuery": "<p><span class=\"variable\" data-type=\"mention\" data-id=\"llmAgentflow_0\" data-label=\"llmAgentflow_0\">{{ llmAgentflow_0 }}</span> <span class=\"variable\" data-type=\"mention\" data-id=\"llmAgentflow_1\" data-label=\"llmAgentflow_1\">{{ llmAgentflow_1 }}</span> </p>",
          "outputFormat": "text",
          "retrieverUpdateState": "",
          "undefined": ""
        },
        "outputAnchors": [
          {
            "id": "retrieverAgentflow_0-output-retrieverAgentflow",
            "label": "Retriever",
            "name": "retrieverAgentflow"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "type": "agentFlow",
      "width": 181,
      "height": 66,
      "selected": false,
      "positionAbsolute": {
        "x": 1016.8712015965233,
        "y": 109.6811171767973
      },
      "dragging": false
    },
    {
      "id": "humanInputAgentflow_0",
      "position": {
        "x": -64.25639953490611,
        "y": 94.85197532120782
      },
      "data": {
        "id": "humanInputAgentflow_0",
        "label": "Human Shopping Request Input",
        "version": 1,
        "name": "humanInputAgentflow",
        "type": "HumanInput",
        "color": "#6E6EFD",
        "baseClasses": [
          "HumanInput"
        ],
        "category": "Agent Flows",
        "description": "Request human input, approval or rejection during execution",
        "inputParams": [
          {
            "label": "Description Type",
            "name": "humanInputDescriptionType",
            "type": "options",
            "options": [
              {
                "label": "Fixed",
                "name": "fixed",
                "description": "Specify a fixed description"
              },
              {
                "label": "Dynamic",
                "name": "dynamic",
                "description": "Use LLM to generate a description"
              }
            ],
            "id": "humanInputAgentflow_0-input-humanInputDescriptionType-options",
            "display": true
          },
          {
            "label": "Description",
            "name": "humanInputDescription",
            "type": "string",
            "placeholder": "Are you sure you want to proceed?",
            "acceptVariable": true,
            "rows": 4,
            "show": {
              "humanInputDescriptionType": "fixed"
            },
            "id": "humanInputAgentflow_0-input-humanInputDescription-string",
            "display": false
          },
          {
            "label": "Model",
            "name": "humanInputModel",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "loadConfig": true,
            "show": {
              "humanInputDescriptionType": "dynamic"
            },
            "id": "humanInputAgentflow_0-input-humanInputModel-asyncOptions",
            "display": true
          },
          {
            "label": "Prompt",
            "name": "humanInputModelPrompt",
            "type": "string",
            "default": "<p>Summarize the conversation between the user and the assistant, reiterate the last message from the assistant, and ask if user would like to proceed or if they have any feedback. </p>\n<ul>\n<li>Begin by capturing the key points of the conversation, ensuring that you reflect the main ideas and themes discussed.</li>\n<li>Then, clearly reproduce the last message sent by the assistant to maintain continuity. Make sure the whole message is reproduced.</li>\n<li>Finally, ask the user if they would like to proceed, or provide any feedback on the last assistant message</li>\n</ul>\n<h2 id=\"output-format-the-output-should-be-structured-in-three-parts-\">Output Format The output should be structured in three parts in text:</h2>\n<ul>\n<li>A summary of the conversation (1-3 sentences).</li>\n<li>The last assistant message (exactly as it appeared).</li>\n<li>Ask the user if they would like to proceed, or provide any feedback on last assistant message. No other explanation and elaboration is needed.</li>\n</ul>\n",
            "acceptVariable": true,
            "generateInstruction": true,
            "rows": 4,
            "show": {
              "humanInputDescriptionType": "dynamic"
            },
            "id": "humanInputAgentflow_0-input-humanInputModelPrompt-string",
            "display": true
          },
          {
            "label": "Enable Feedback",
            "name": "humanInputEnableFeedback",
            "type": "boolean",
            "default": true,
            "id": "humanInputAgentflow_0-input-humanInputEnableFeedback-boolean",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "humanInputDescriptionType": "dynamic",
          "humanInputEnableFeedback": false,
          "humanInputModel": "chatOpenRouter",
          "humanInputModelConfig": {
            "cache": "",
            "modelName": "openai/gpt-oss-20b:free",
            "temperature": 0.9,
            "streaming": true,
            "maxTokens": "",
            "topP": "",
            "frequencyPenalty": "",
            "presencePenalty": "",
            "timeout": "",
            "basepath": "https://openrouter.ai/api/v1",
            "baseOptions": "",
            "humanInputModel": "chatOpenRouter"
          },
          "humanInputModelPrompt": "<p>You are a personal AI shopping agent that cuts through reviews to make decisions effortless.</p><p>Introduce yourself and ask the user:</p><p>\"What product would you like me to research today? Please share any specific needs, budget, or features that matter to you.\"</p><p>Your goal is to understand exactly what they're shopping for so you can search across multiple sites, analyze customer sentiment, and deliver a clear verdict on whether the product lives up to the hype.</p>"
        },
        "outputAnchors": [
          {
            "id": "humanInputAgentflow_0-output-0",
            "label": "Human Input",
            "name": "humanInputAgentflow"
          },
          {
            "id": "humanInputAgentflow_0-output-1",
            "label": "Human Input",
            "name": "humanInputAgentflow"
          }
        ],
        "outputs": {
          "humanInputAgentflow": ""
        },
        "selected": false
      },
      "type": "agentFlow",
      "width": 277,
      "height": 80,
      "selected": false,
      "positionAbsolute": {
        "x": -64.25639953490611,
        "y": 94.85197532120782
      },
      "dragging": false
    },
    {
      "id": "loopAgentflow_1",
      "position": {
        "x": 249.94532859464732,
        "y": 251.09857339837203
      },
      "data": {
        "id": "loopAgentflow_1",
        "label": "Loop",
        "version": 1,
        "name": "loopAgentflow",
        "type": "Loop",
        "color": "#FFA07A",
        "hideOutput": true,
        "baseClasses": [
          "Loop"
        ],
        "category": "Agent Flows",
        "description": "Loop back to a previous node",
        "inputParams": [
          {
            "label": "Loop Back To",
            "name": "loopBackToNode",
            "type": "asyncOptions",
            "loadMethod": "listPreviousNodes",
            "freeSolo": true,
            "id": "loopAgentflow_1-input-loopBackToNode-asyncOptions",
            "display": true
          },
          {
            "label": "Max Loop Count",
            "name": "maxLoopCount",
            "type": "number",
            "default": 5,
            "id": "loopAgentflow_1-input-maxLoopCount-number",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "loopBackToNode": "humanInputAgentflow_0-Human Shopping Request Input",
          "maxLoopCount": "5"
        },
        "outputAnchors": [],
        "outputs": {},
        "selected": false
      },
      "type": "agentFlow",
      "width": 105,
      "height": 66,
      "selected": false,
      "positionAbsolute": {
        "x": 249.94532859464732,
        "y": 251.09857339837203
      },
      "dragging": false
    },
    {
      "id": "conditionAgentflow_0",
      "position": {
        "x": 2195.8732675793585,
        "y": 91.2361586992898
      },
      "data": {
        "id": "conditionAgentflow_0",
        "label": "Condition 0",
        "version": 1,
        "name": "conditionAgentflow",
        "type": "Condition",
        "color": "#FFB938",
        "baseClasses": [
          "Condition"
        ],
        "category": "Agent Flows",
        "description": "Split flows based on If Else conditions",
        "inputParams": [
          {
            "label": "Conditions",
            "name": "conditions",
            "type": "array",
            "description": "Values to compare",
            "acceptVariable": true,
            "default": [
              {
                "type": "string",
                "value1": "",
                "operation": "notEmpty",
                "value2": ""
              }
            ],
            "array": [
              {
                "label": "Type",
                "name": "type",
                "type": "options",
                "options": [
                  {
                    "label": "String",
                    "name": "string"
                  },
                  {
                    "label": "Number",
                    "name": "number"
                  },
                  {
                    "label": "Boolean",
                    "name": "boolean"
                  }
                ],
                "default": "string"
              },
              {
                "label": "Value 1",
                "name": "value1",
                "type": "string",
                "default": "",
                "description": "First value to be compared with",
                "acceptVariable": true,
                "show": {
                  "conditions[$index].type": "string"
                }
              },
              {
                "label": "Operation",
                "name": "operation",
                "type": "options",
                "options": [
                  {
                    "label": "Contains",
                    "name": "contains"
                  },
                  {
                    "label": "Ends With",
                    "name": "endsWith"
                  },
                  {
                    "label": "Equal",
                    "name": "equal"
                  },
                  {
                    "label": "Not Contains",
                    "name": "notContains"
                  },
                  {
                    "label": "Not Equal",
                    "name": "notEqual"
                  },
                  {
                    "label": "Regex",
                    "name": "regex"
                  },
                  {
                    "label": "Starts With",
                    "name": "startsWith"
                  },
                  {
                    "label": "Is Empty",
                    "name": "isEmpty"
                  },
                  {
                    "label": "Not Empty",
                    "name": "notEmpty"
                  }
                ],
                "default": "equal",
                "description": "Type of operation",
                "show": {
                  "conditions[$index].type": "string"
                }
              },
              {
                "label": "Value 2",
                "name": "value2",
                "type": "string",
                "default": "",
                "description": "Second value to be compared with",
                "acceptVariable": true,
                "show": {
                  "conditions[$index].type": "string"
                },
                "hide": {
                  "conditions[$index].operation": [
                    "isEmpty",
                    "notEmpty"
                  ]
                }
              },
              {
                "label": "Value 1",
                "name": "value1",
                "type": "number",
                "default": "",
                "description": "First value to be compared with",
                "acceptVariable": true,
                "show": {
                  "conditions[$index].type": "number"
                }
              },
              {
                "label": "Operation",
                "name": "operation",
                "type": "options",
                "options": [
                  {
                    "label": "Smaller",
                    "name": "smaller"
                  },
                  {
                    "label": "Smaller Equal",
                    "name": "smallerEqual"
                  },
                  {
                    "label": "Equal",
                    "name": "equal"
                  },
                  {
                    "label": "Not Equal",
                    "name": "notEqual"
                  },
                  {
                    "label": "Larger",
                    "name": "larger"
                  },
                  {
                    "label": "Larger Equal",
                    "name": "largerEqual"
                  },
                  {
                    "label": "Is Empty",
                    "name": "isEmpty"
                  },
                  {
                    "label": "Not Empty",
                    "name": "notEmpty"
                  }
                ],
                "default": "equal",
                "description": "Type of operation",
                "show": {
                  "conditions[$index].type": "number"
                }
              },
              {
                "label": "Value 2",
                "name": "value2",
                "type": "number",
                "default": 0,
                "description": "Second value to be compared with",
                "acceptVariable": true,
                "show": {
                  "conditions[$index].type": "number"
                }
              },
              {
                "label": "Value 1",
                "name": "value1",
                "type": "boolean",
                "default": false,
                "description": "First value to be compared with",
                "show": {
                  "conditions[$index].type": "boolean"
                }
              },
              {
                "label": "Operation",
                "name": "operation",
                "type": "options",
                "options": [
                  {
                    "label": "Equal",
                    "name": "equal"
                  },
                  {
                    "label": "Not Equal",
                    "name": "notEqual"
                  }
                ],
                "default": "equal",
                "description": "Type of operation",
                "show": {
                  "conditions[$index].type": "boolean"
                }
              },
              {
                "label": "Value 2",
                "name": "value2",
                "type": "boolean",
                "default": false,
                "description": "Second value to be compared with",
                "show": {
                  "conditions[$index].type": "boolean"
                }
              }
            ],
            "id": "conditionAgentflow_0-input-conditions-array",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "conditions": [
            {
              "type": "string",
              "value1": "<pre><code>{{review_text}}</code></pre>",
              "operation": "contains",
              "value2": "<pre><code>product|review|buy|quality</code></pre>"
            },
            {
              "type": "number",
              "value1": "<pre><code>{{review_text.length}} </code></pre>",
              "operation": "larger",
              "value2": "<pre><code>50</code></pre>"
            }
          ]
        },
        "outputAnchors": [
          {
            "id": "conditionAgentflow_0-output-0",
            "label": 0,
            "name": 0,
            "description": "Condition 0"
          },
          {
            "id": "conditionAgentflow_0-output-1",
            "label": 1,
            "name": 1,
            "description": "Condition 1"
          },
          {
            "id": "conditionAgentflow_0-output-2",
            "label": 2,
            "name": 2,
            "description": "Else"
          }
        ],
        "outputs": {
          "conditionAgentflow": ""
        },
        "selected": false
      },
      "type": "agentFlow",
      "width": 147,
      "height": 100,
      "selected": false,
      "positionAbsolute": {
        "x": 2195.8732675793585,
        "y": 91.2361586992898
      },
      "dragging": false
    },
    {
      "id": "directReplyAgentflow_1",
      "position": {
        "x": 2429.064319321945,
        "y": 104.13414067582787
      },
      "data": {
        "id": "directReplyAgentflow_1",
        "label": "Direct Reply 0 ",
        "version": 1,
        "name": "directReplyAgentflow",
        "type": "DirectReply",
        "color": "#4DDBBB",
        "hideOutput": true,
        "baseClasses": [
          "DirectReply"
        ],
        "category": "Agent Flows",
        "description": "Directly reply to the user with a message",
        "inputParams": [
          {
            "label": "Message",
            "name": "directReplyMessage",
            "type": "string",
            "rows": 4,
            "acceptVariable": true,
            "id": "directReplyAgentflow_1-input-directReplyMessage-string",
            "display": true
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "directReplyMessage": "<p>Based on my analysis of <span class=\"variable\" data-type=\"mention\" data-id=\"retrieverAgentflow_0\" data-label=\"retrieverAgentflow_0\">{{ retrieverAgentflow_0 }}</span> reviews,</p><p>Key findings:</p><p><span class=\"variable\" data-type=\"mention\" data-id=\"llmAgentflow_0\" data-label=\"llmAgentflow_0\">{{ llmAgentflow_0 }}</span></p><p>Considerations:</p><p><span class=\"variable\" data-type=\"mention\" data-id=\"llmAgentflow_1\" data-label=\"llmAgentflow_1\">{{ llmAgentflow_1 }}</span></p><p>Final verdict: <span class=\"variable\" data-type=\"mention\" data-id=\"llmAgentflow_2\" data-label=\"llmAgentflow_2\">{{ llmAgentflow_2 }}</span> </p>",
          "undefined": ""
        },
        "outputAnchors": [],
        "outputs": {},
        "selected": false
      },
      "type": "agentFlow",
      "width": 163,
      "height": 66,
      "selected": false,
      "positionAbsolute": {
        "x": 2429.064319321945,
        "y": 104.13414067582787
      },
      "dragging": false
    }
  ],
  "edges": [
    {
      "source": "iterationAgentflow_0",
      "sourceHandle": "iterationAgentflow_0-output-iterationAgentflow",
      "target": "httpAgentflow_6",
      "targetHandle": "httpAgentflow_6",
      "data": {
        "sourceColor": "#9C89B8",
        "targetColor": "#FF7F7F",
        "isHumanInput": false
      },
      "type": "agentFlow",
      "id": "iterationAgentflow_0-iterationAgentflow_0-output-iterationAgentflow-httpAgentflow_6-httpAgentflow_6"
    },
    {
      "source": "httpAgentflow_6",
      "sourceHandle": "httpAgentflow_6-output-httpAgentflow",
      "target": "llmAgentflow_2",
      "targetHandle": "llmAgentflow_2",
      "data": {
        "sourceColor": "#FF7F7F",
        "targetColor": "#64B5F6",
        "isHumanInput": false
      },
      "type": "agentFlow",
      "id": "httpAgentflow_6-httpAgentflow_6-output-httpAgentflow-llmAgentflow_2-llmAgentflow_2"
    },
    {
      "source": "retrieverAgentflow_0",
      "sourceHandle": "retrieverAgentflow_0-output-retrieverAgentflow",
      "target": "iterationAgentflow_0",
      "targetHandle": "iterationAgentflow_0",
      "data": {
        "sourceColor": "#b8bedd",
        "targetColor": "#9C89B8",
        "isHumanInput": false
      },
      "type": "agentFlow",
      "id": "retrieverAgentflow_0-retrieverAgentflow_0-output-retrieverAgentflow-iterationAgentflow_0-iterationAgentflow_0"
    },
    {
      "source": "httpAgentflow_3",
      "sourceHandle": "httpAgentflow_3-output-httpAgentflow",
      "target": "llmAgentflow_0",
      "targetHandle": "llmAgentflow_0",
      "data": {
        "sourceColor": "#FF7F7F",
        "targetColor": "#64B5F6",
        "isHumanInput": false
      },
      "type": "agentFlow",
      "id": "httpAgentflow_3-httpAgentflow_3-output-httpAgentflow-llmAgentflow_0-llmAgentflow_0"
    },
    {
      "source": "httpAgentflow_4",
      "sourceHandle": "httpAgentflow_4-output-httpAgentflow",
      "target": "llmAgentflow_1",
      "targetHandle": "llmAgentflow_1",
      "data": {
        "sourceColor": "#FF7F7F",
        "targetColor": "#64B5F6",
        "isHumanInput": false
      },
      "type": "agentFlow",
      "id": "httpAgentflow_4-httpAgentflow_4-output-httpAgentflow-llmAgentflow_1-llmAgentflow_1"
    },
    {
      "source": "llmAgentflow_0",
      "sourceHandle": "llmAgentflow_0-output-llmAgentflow",
      "target": "retrieverAgentflow_0",
      "targetHandle": "retrieverAgentflow_0",
      "data": {
        "sourceColor": "#64B5F6",
        "targetColor": "#b8bedd",
        "isHumanInput": false
      },
      "type": "agentFlow",
      "id": "llmAgentflow_0-llmAgentflow_0-output-llmAgentflow-retrieverAgentflow_0-retrieverAgentflow_0"
    },
    {
      "source": "llmAgentflow_1",
      "sourceHandle": "llmAgentflow_1-output-llmAgentflow",
      "target": "retrieverAgentflow_0",
      "targetHandle": "retrieverAgentflow_0",
      "data": {
        "sourceColor": "#64B5F6",
        "targetColor": "#b8bedd",
        "isHumanInput": false
      },
      "type": "agentFlow",
      "id": "llmAgentflow_1-llmAgentflow_1-output-llmAgentflow-retrieverAgentflow_0-retrieverAgentflow_0"
    },
    {
      "source": "startAgentflow_0",
      "sourceHandle": "startAgentflow_0-output-startAgentflow",
      "target": "humanInputAgentflow_0",
      "targetHandle": "humanInputAgentflow_0",
      "data": {
        "sourceColor": "#7EE787",
        "targetColor": "#6E6EFD",
        "isHumanInput": false
      },
      "type": "agentFlow",
      "id": "startAgentflow_0-startAgentflow_0-output-startAgentflow-humanInputAgentflow_0-humanInputAgentflow_0"
    },
    {
      "source": "humanInputAgentflow_0",
      "sourceHandle": "humanInputAgentflow_0-output-1",
      "target": "loopAgentflow_1",
      "targetHandle": "loopAgentflow_1",
      "data": {
        "sourceColor": "#6E6EFD",
        "targetColor": "#FFA07A",
        "edgeLabel": "reject",
        "isHumanInput": true
      },
      "type": "agentFlow",
      "id": "humanInputAgentflow_0-humanInputAgentflow_0-output-1-loopAgentflow_1-loopAgentflow_1"
    },
    {
      "source": "humanInputAgentflow_0",
      "sourceHandle": "humanInputAgentflow_0-output-0",
      "target": "httpAgentflow_3",
      "targetHandle": "httpAgentflow_3",
      "data": {
        "sourceColor": "#6E6EFD",
        "targetColor": "#FF7F7F",
        "edgeLabel": "proceed",
        "isHumanInput": true
      },
      "type": "agentFlow",
      "id": "humanInputAgentflow_0-humanInputAgentflow_0-output-0-httpAgentflow_3-httpAgentflow_3"
    },
    {
      "source": "humanInputAgentflow_0",
      "sourceHandle": "humanInputAgentflow_0-output-0",
      "target": "httpAgentflow_4",
      "targetHandle": "httpAgentflow_4",
      "data": {
        "sourceColor": "#6E6EFD",
        "targetColor": "#FF7F7F",
        "edgeLabel": "proceed",
        "isHumanInput": true
      },
      "type": "agentFlow",
      "id": "humanInputAgentflow_0-humanInputAgentflow_0-output-0-httpAgentflow_4-httpAgentflow_4"
    },
    {
      "source": "llmAgentflow_2",
      "sourceHandle": "llmAgentflow_2-output-llmAgentflow",
      "target": "conditionAgentflow_0",
      "targetHandle": "conditionAgentflow_0",
      "data": {
        "sourceColor": "#64B5F6",
        "targetColor": "#FFB938",
        "isHumanInput": false
      },
      "type": "agentFlow",
      "id": "llmAgentflow_2-llmAgentflow_2-output-llmAgentflow-conditionAgentflow_0-conditionAgentflow_0"
    },
    {
      "source": "conditionAgentflow_0",
      "sourceHandle": "conditionAgentflow_0-output-2",
      "target": "directReplyAgentflow_1",
      "targetHandle": "directReplyAgentflow_1",
      "data": {
        "sourceColor": "#FFB938",
        "targetColor": "#4DDBBB",
        "edgeLabel": "2",
        "isHumanInput": false
      },
      "type": "agentFlow",
      "id": "conditionAgentflow_0-conditionAgentflow_0-output-2-directReplyAgentflow_1-directReplyAgentflow_1"
    }
  ]
}